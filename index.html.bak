<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>SUPERMARKET BILLING</title>
    <style>
        /*Basic styling*/
        body { font-family: Arial, sans-serif; margin: 20px; background-color: black; color: black;}
        .container { max-width: 600px; margin: 0 auto; background-color: #ff9966;}
        .bill-table { width: 100%; border-collapse: collapse; }
        .bill-table th, .bill-table td { padding: 10px; border: 1px solid #3300cc; background-color: #33ffff;}
        .btn { padding: 10px 20px; background-color: #00cc33; color: white; border: none; cursor: pointer; }
        .btn:hover { background-color: #339900; }
        .dropdown-content { display: none; position: absolute; background-color: #339900; min-width: 160px; box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2); z-index: 1; }
        .dropdown-content a { color: black; padding: 12px 16px; text-decoration: none; display: block; }
        .dropdown-content a:hover { background-color: #339900; }
        .dropdown { position: relative; display: inline-block; }
        .dropdown:hover .dropdown-content { display: block; }   
        .autocomplete {
            position: relative;
            display: inline-block;
        }
        .autocomplete-items {
            position: absolute;
            border: 1px solid #d4d4d4;
            border-top: none;
            z-index: 99;
            max-height: 200px;
            overflow-y: auto;
            background-color: #fff;
            width: 100%;
        }
        .autocomplete-items div {
            padding: 10px;
            cursor: pointer;
        }
        .autocomplete-items div:hover {
            background-color: #e9e9e9;
        }
    </style>
</head>
<body>
<div class="container">
    <h1>Supermarket Billing</h1>  
    <!-- Manually Add Product Code, Price, Quantity -->
    <div>
        <input type="text" id="productCode" placeholder="Enter Product Code">
        <div class="autocomplete">
            <input type="text" id="productName" placeholder="Enter Product Name" onkeyup="filterProductNames()">
            <div id="productDropdown" class="autocomplete-items"></div>
        </div>
        <input type="number" id="productPrice" placeholder="Enter Price (₹)" step="0.01">
        <input type="number" id="productQuantity" placeholder="Enter Quantity" min="1">
        <button class="btn" onclick="addManualProduct()">Add Product</button>
    </div>
    <br><br>
    <!-- Bill Table -->
    <table class="bill-table">
        <thead>
            <tr>
                <th>Product Code</th>
                <th>Product Name</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Total</th>
                <th>Remove</th>
            </tr>
        </thead>
        <tbody id="billTableBody"></tbody>
    </table>
    <br>
    <!-- Bill Summary -->
    <div>
        <strong>Total: ₹<span id="totalAmount">0.00</span></strong>
    </div>
    <br>
    <!-- Country Code and Phone Number for WhatsApp -->
    <div>
        <input type="text" id="countryCode" placeholder="Country Code (e.g., +91)">
        <input type="text" id="phoneNumber" placeholder="Phone Number">
    </div>
    <br>
    <!-- Send Bill via WhatsApp -->
    <button class="btn" id="sendBillBtn">Send Bill to Customer</button>
    <br><br>
    <!-- Inventory Management Button -->
    <button class="btn" onclick="toggleInventory()">Manage Inventory</button>
    <!-- Inventory Popup -->
    <div id="inventoryPopup" style="display: none; background-color: #fff; color: #000; padding: 20px; border-radius: 10px; position: fixed; top: 10%; right: 10%; max-width: 400px; box-shadow: 0 0 15px rgba(0,0,0,0.2);">
        <h2>Inventory Management</h2>
        <table class="inventory-table" style="width: 100%; border-collapse: collapse;">
            <thead>
                <tr>
                <th>Product Name</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Actions</th>
                </tr>
            </thead>
            <tbody id="inventoryTableBody"></tbody>
        </table>
        <br>
        <button class="btn" onclick="addInventoryProduct()">Add New Product</button>
        <input type="text" id="newProductName" placeholder="Product Name">
        <input type="number" id="newProductPrice" placeholder="Product Price (₹)">
        <input type="number" id="newProductQuantity" placeholder="Product Quantity">
        <br><br>
        <button class="btn" onclick="closeInventory()">Close Inventory</button>
    </div>
<script>
// Inventory Management
let inventory = [
    { name: "Colgate", price: 20, quantity: 10 },
    { name: "Pen", price: 5, quantity: 50 },
    { name: "Toothbrush", price: 15, quantity: 30 }
];
let bill = [];
function toggleInventory() {
    const inventoryPopup = document.getElementById('inventoryPopup');
    inventoryPopup.style.display = (inventoryPopup.style.display === 'none') ? 'block' : 'none';
    displayInventory();
}
function displayInventory() {
    const inventoryTableBody = document.getElementById('inventoryTableBody');
    inventoryTableBody.innerHTML = '';
  inventory.forEach(item => {
  const row = document.createElement('tr');
  row.innerHTML = `
  <td>${item.name}</td>
  <td>₹${item.price}</td>
  <td>${item.quantity}</td>
  <td><button onclick="addProductFromInventory('${item.name}', ${item.price})">Add to Bill</button></td>`;
        inventoryTableBody.appendChild(row);
    });
}
function addProductFromInventory(name, price) {
    const quantity = 1; // Default quantity is 1 for now, but you can change this logic
    const code = name.substring(0, 3).toUpperCase(); // Using first 3 letters of the name as code
    addProductToBill(code, name, price, quantity);
}
function addProductToBill(code, name, price, quantity) {
    const total = (price * quantity).toFixed(2);
    const existingProduct = bill.find(item => item.code === code);
    if (existingProduct) {
        existingProduct.quantity += quantity;
        existingProduct.total = (existingProduct.quantity * price).toFixed(2);
    } else {
        bill.push({ code, name, price, quantity, total });
    }
    updateBillTable();
}
function addManualProduct() {
    const code = document.getElementById('productCode').value.trim();
    const name = document.getElementById('productName').value.trim();
    const price = parseFloat(document.getElementById('productPrice').value);
    const quantity = parseInt(document.getElementById('productQuantity').value);

    if (code && name && !isNaN(price) && !isNaN(quantity) && quantity > 0) {
        const total = (price * quantity).toFixed(2);
        bill.push({ code, name, price, quantity, total });
        updateBillTable();
    } else {
        alert("Please provide valid product details.");
    }
}
function updateBillTable() {
    const billTableBody = document.getElementById('billTableBody');
    billTableBody.innerHTML = '';
    let total = 0;
    bill.forEach(item => {
        const row = document.createElement('tr');
        row.innerHTML = `
            <td>${item.code}</td>
            <td>${item.name}</td>
            <td>₹${item.price}</td>
            <td>${item.quantity}</td>
            <td>₹${item.total}</td>
            <td><button onclick="removeProduct('${item.code}')">Remove</button></td>`;
        billTableBody.appendChild(row);
        total += parseFloat(item.total);
    });
    document.getElementById('totalAmount').textContent = total.toFixed(2);
}
function removeProduct(productCode) {
    bill = bill.filter(item => item.code !== productCode);
    updateBillTable();
}
function closeInventory() {
    document.getElementById('inventoryPopup').style.display = 'none';
}
// Add New Product to Inventory
function addInventoryProduct() {
    const name = document.getElementById('newProductName').value.trim();
    const price = parseFloat(document.getElementById('newProductPrice').value);
    const quantity = parseInt(document.getElementById('newProductQuantity').value);
    if (name && !isNaN(price) && !isNaN(quantity) && quantity > 0) {
        // Add the new product to the inventory array
        inventory.push({ name, price, quantity });
        // Clear the input fields
        document.getElementById('newProductName').value = '';
        document.getElementById('newProductPrice').value = '';
        document.getElementById('newProductQuantity').value = '';
        // Refresh the inventory display
        displayInventory();
    } else {
        alert("Please provide valid product details.");
    }
}
document.getElementById('sendBillBtn').addEventListener('click', function() {
    const countryCode = document.getElementById('countryCode').value.trim();
    const phoneNumber = document.getElementById('phoneNumber').value.trim();
    if (countryCode && phoneNumber) {
        const customerNumber = `${countryCode}${phoneNumber}`;
        const message = `Your Supermarket bill: \n${bill.map(item => `${item.name} (Code: ${item.code}) x${item.quantity} - ₹${item.total}`).join("\n")}\nTotal: ₹${document.getElementById('totalAmount').textContent}`;
        window.open(`https://wa.me/${customerNumber}?text=${encodeURIComponent(message)}`);
    } else {
        alert("Please provide both the country code and phone number.");
    }
});
// Filter product names as user types
function filterProductNames() {
    const input = document.getElementById('productName').value.toLowerCase();
    const dropdown = document.getElementById('productDropdown');
    dropdown.innerHTML = ''; // Clear previous suggestions
    if (input) {
        const filteredProducts = inventory.filter(product => product.name.toLowerCase().includes(input));     
        filteredProducts.forEach(product => {
            const div = document.createElement('div');
            div.textContent = `${product.name} - ₹${product.price}`;
            div.onclick = function() {
                document.getElementById('productName').value = product.name;
                document.getElementById('productPrice').value = product.price;
                document.getElementById('productCode').value = product.name.substring(0, 3).toUpperCase();
                dropdown.innerHTML = ''; // Close the dropdown after selection
            };
            dropdown.appendChild(div);
        });
    }
}
</script>
</body>
</html>
